{
	"$schema": "https://biomejs.dev/schemas/1.9.4/schema.json",
	"organizeImports": { "enabled": true },
	"linter": {
		"enabled": true,
		"rules": {
			"recommended": false,
			"complexity": {
				"noBannedTypes": "error",
				"noExtraBooleanCast": "error",
				"noForEach": "warn",
				"noMultipleSpacesInRegularExpressionLiterals": "error",
				"noUselessCatch": "error",
				"noUselessThisAlias": "error",
				"noUselessTypeConstraint": "error",
				"noWith": "error",
				"useArrowFunction": "warn",
				"useFlatMap": "warn"
			},
			"correctness": {
				"noConstAssign": "error",
				"noConstantCondition": "error",
				"noEmptyCharacterClassInRegex": "error",
				"noEmptyPattern": "error",
				"noGlobalObjectCalls": "error",
				"noInnerDeclarations": "error",
				"noInvalidConstructorSuper": "error",
				"noNewSymbol": "error",
				"noNonoctalDecimalEscape": "error",
				"noPrecisionLoss": "error",
				"noSelfAssign": "error",
				"noSetterReturn": "error",
				"noSwitchDeclarations": "error",
				"noUndeclaredVariables": "error",
				"noUnreachable": "error",
				"noUnreachableSuper": "error",
				"noUnsafeFinally": "error",
				"noUnsafeOptionalChaining": "error",
				"noUnusedLabels": "error",
				"noUnusedVariables": "error",
				"useIsNan": "error",
				"useValidForDirection": "error",
				"useYield": "error"
			},
			"style": {
				"noDefaultExport": "warn",
				"noNamespace": "error",
				"useAsConstAssertion": "error",
				"useBlockStatements": "error",
				"useFilenamingConvention": {
					"level": "error",
					"options": { "requireAscii": true, "filenameCases": ["kebab-case"] }
				}
			},
			"suspicious": {
				"noAssignInExpressions": "error",
				"noAsyncPromiseExecutor": "error",
				"noCatchAssign": "error",
				"noClassAssign": "error",
				"noCompareNegZero": "error",
				"noControlCharactersInRegex": "error",
				"noDebugger": "error",
				"noDuplicateCase": "error",
				"noDuplicateClassMembers": "error",
				"noDuplicateObjectKeys": "error",
				"noDuplicateParameters": "error",
				"noEmptyBlockStatements": "error",
				"noExplicitAny": "warn",
				"noExtraNonNullAssertion": "error",
				"noFallthroughSwitchClause": "error",
				"noFunctionAssign": "error",
				"noGlobalAssign": "error",
				"noImportAssign": "error",
				"noMisleadingCharacterClass": "error",
				"noMisleadingInstantiator": "error",
				"noPrototypeBuiltins": "error",
				"noRedeclare": "error",
				"noShadowRestrictedNames": "error",
				"noUnsafeDeclarationMerging": "error",
				"noUnsafeNegation": "error",
				"useAwait": "off",
				"useGetterReturn": "error",
				"useIsArray": "error",
				"useValidTypeof": "error"
			}
		},
		"ignore": [
			".eslintrc.js",
			"tsconfig.json",
			"**/lib-cov",
			"**/coverage",
			"**/__mocks__",
			"infrastructure/overwrite",
			"**/newrelic.js",
			"**/__test__",
			"**/*.NOTE.*",
			"**/*.js",
			"**/build",
			"cli/*"
		]
	},
  "javascript": {
    "globals": ["test", "it", "describe", "expect", "vitest"],
    "formatter": {
      "jsxQuoteStyle": "double",
      "quoteProperties": "asNeeded",
	    "trailingCommas": "es5",
      "semicolons": "always",
      "arrowParentheses": "always",
      "bracketSpacing": true,
      "bracketSameLine": false,
      "quoteStyle": "double",
      "attributePosition": "auto",
      "lineWidth": 180,
      "indentStyle": "space",
      "indentWidth": 2
    }
  }
}
